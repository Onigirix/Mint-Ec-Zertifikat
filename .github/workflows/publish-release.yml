name: 'publish-release'

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install prerequisites (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y


      - name: Install winget (Windows)
        if: matrix.platform == 'windows-latest'
        uses: Cyberboss/install-winget@v1

      - name: Install prerequisites (Windows)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: >
          winget install --id Rustlang.Rustup --accept-source-agreements --accept-package-agreements

      - name: Install prerequisites 2(Windows)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: >
          winget install -e --id NSIS.NSIS --accept-source-agreements --accept-package-agreements

      - name: Install prerequisites (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install tauri
        run: |
          cargo install tauri-cli --version "^2.0.0" --locked

      - name: Build tauri app
        run: |
          cargo tauri build ${{ matrix.args }}
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-${{ matrix.platform }}
          path: src-tauri/target/release/bundle

      - name: "Upload to Release"
        if: matrix.platform != 'windows-latest'
        run: |
          cd ${{github.workspace}}
          gh release upload ${{ github.event.release.tag_name }} "/src-tauri/target/release/bundle/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Upload to Release (Windows)"
        if: matrix.platform == 'windows-latest'
        run: |
          cd ${{github.workspace}}
          gh release upload ${{ github.event.release.tag_name }} "/src-tauri/target/release/bundle/nsis/*""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
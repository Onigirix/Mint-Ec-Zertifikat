name: 'publish-release'

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install prerequisites (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y


      - name: Install winget (Windows)
        if: matrix.platform == 'windows-latest'
        uses: Cyberboss/install-winget@v1

      - name: Install prerequisites (Windows)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: >
          winget install --id Rustlang.Rustup --accept-source-agreements --accept-package-agreements

      - name: Enable long paths
        if: runner.os == 'Windows'
        shell: pwsh
        run: >
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force

      - name: Install prerequisites (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install tauri
        run: |
          cargo install tauri-cli --version "^2.0.0" --locked

      - name: Build tauri app
        run: |
          cargo tauri build ${{ matrix.args }}
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      - name: Upload artifacts (Ubuntu)
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/deb/Mint-EC_*.deb.sig
            src-tauri/target/release/bundle/appimage/Mint-EC_*.AppImage.sig
            src-tauri/target/release/bundle/rpm/Mint-EC-*.rpm.sig

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-x64
          path: src-tauri/target/release/bundle/nsis/*.exe.sig

      - name: Upload artifacts (MacOS x86)
        if: matrix.platform == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-x86_64
          path: ./src-tauri/target/x86_64-apple-darwin/release/bundle/macos/Mint-EC.app.tar.gz.sig

      - name: Upload artifacts (MacOS aarch64)
        if: matrix.platform == 'macos-latest' && matrix.args == '--target aarch64-apple-darwin'
        uses: actions/upload-artifact@v4
        with:
          name: tauri-app-aarch64
          path: ./src-tauri/target/x86_64-apple-darwin/release/bundle/macos/Mint-EC.app.tar.gz.sig

      - name: "Upload to Release (MacOS x86_64)"
        if: matrix.platform == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin'
        run: |
          cd ${{github.workspace}}
          mv ./src-tauri/target/x86_64-apple-darwin/release/bundle/macos/Mint-EC.app.tar.gz ./src-tauri/target/x86_64-apple-darwin/release/bundle/macos/Mint-EC_x86_64.app.tar.gz
          gh release upload ${{ github.event.release.tag_name }} ./src-tauri/target/x86_64-apple-darwin/release/bundle/macos/Mint-EC_x86_64.app.tar.gz --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Upload to Release (MacOS aarch64)"
        if: matrix.platform == 'macos-latest' && matrix.args == '--target aarch64-apple-darwin'
        run: |
          cd ${{github.workspace}}
          mv ./src-tauri/target/aarch64-apple-darwin/release/bundle/macos/Mint-EC.app.tar.gz ./src-tauri/target/aarch64-apple-darwin/release/bundle/macos/Mint-EC_aarch64.app.tar.gz
          gh release upload ${{ github.event.release.tag_name }} ./src-tauri/target/aarch64-apple-darwin/release/bundle/macos/Mint-EC_aarch64.app.tar.gz --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Upload to Release (Ubuntu)"
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          gh release upload ${{ github.event.release.tag_name }} ./src-tauri/target/release/bundle/deb/Mint-EC_*.deb --clobber
          gh release upload ${{ github.event.release.tag_name }} ./src-tauri/target/release/bundle/appimage/Mint-EC_*.AppImage --clobber
          gh release upload ${{ github.event.release.tag_name }} ./src-tauri/target/release/bundle/rpm/Mint-EC-*.rpm --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Upload to Release (Windows)"
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          cd ${{github.workspace}}
          gh release upload ${{ github.event.release.tag_name }} (Get-Item ${{github.workspace}}\src-tauri\target\release\bundle\nsis\*.exe) --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-latest-json:
    needs: publish-tauri
    runs-on: ubuntu-latest
    steps:
        - uses: actions/download-artifact@v4

        - name: Display structure of downloaded files
          run: ls -R

        - name: Checkout
          uses: actions/checkout@v4